{"version":3,"sources":["components/HomePage.tsx","api.ts","components/PersonLink.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","Pages/PeoplePage.tsx","components/PageNavLink.tsx","components/Navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","born","died","motherName","fatherName","slug","checkPersonName","hasMotherInList","hasFatherInList","useParams","currentSlug","classNames","to","Loader","PeopleTable","people","isLoading","checkMotherName","personParentName","find","map","PeoplePage","useState","peopleFromServer","setPeopleFromServer","setIsLoading","isError","setIsError","isThereNoPeople","setIsThereNoPeople","useEffect","item","length","catch","finally","PageNavLink","text","isActive","Navigation","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6793353b.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  checkPersonName: (motherName: string | null) => Person | null;\n};\n\nexport const PersonLink: FC<Props> = ({\n  person: {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  },\n  checkPersonName,\n}) => {\n  const hasMotherInList = checkPersonName(motherName);\n  const hasFatherInList = checkPersonName(fatherName);\n  const { slug: currentSlug = '' } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': currentSlug === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {hasMotherInList ? (\n          <Link to={`/people/${hasMotherInList.slug}`} className=\"has-text-danger\">\n            {motherName}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {hasFatherInList ? (\n          <Link to={`/people/${hasFatherInList.slug}`}>{fatherName}</Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { Loader } from './Loader';\n\n type Props = {\n   people: Person[];\n   isLoading: boolean;\n };\n\nexport const PeopleTable: FC<Props> = ({\n  people,\n  isLoading,\n}) => {\n  const checkMotherName = (personParentName: string | null) => {\n    return personParentName\n      ? people.find(person => person.name === personParentName) || null\n      : null;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? <Loader /> : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {people.map(person => (\n                  <PersonLink\n                    person={person}\n                    key={person.slug}\n                    checkPersonName={checkMotherName}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[] | []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isThereNoPeople, setIsThereNoPeople] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n    setIsThereNoPeople(false);\n\n    getPeople()\n      .then(item => {\n        if (!item.length) {\n          setIsThereNoPeople(true);\n        }\n\n        setPeopleFromServer(item);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      {!isError && !isThereNoPeople && (\n        <PeopleTable\n          people={peopleFromServer}\n          isLoading={isLoading}\n        />\n      )}\n\n      {isError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {isThereNoPeople && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\n type Props = {\n   to: string;\n   text: string;\n };\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Navigation: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { Navigation } from './components/Navigation';\n\nexport const App: FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <main className=\"section\">\n        <Navigation />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route\n              path=\":slug\"\n              element={<PeoplePage />}\n            />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}